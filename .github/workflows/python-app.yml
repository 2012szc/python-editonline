name: Python Application CI/CD

on:
  push:
分支: [ main ]
  pull_request:
分支: [ main ]

env:
  FLASK_ENV: production
  DATABASE_URL: postgresql://user:pass@localhost/dbname

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/
    
    - name: Build Docker image
      run: |
        docker build -t python-app .
    
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Push to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag python-app ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    
    - name: Deploy to server
      run: |
        ssh user@server.example.com '
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest
          docker stop python-app || true
          docker rm python-app || true
          docker run -d \
            --name python-app \
            -p 5000:5000 \
            -e FLASK_ENV=production \
            ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest
        '
